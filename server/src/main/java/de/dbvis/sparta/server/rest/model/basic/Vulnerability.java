package de.dbvis.sparta.server.rest.model.basic;

import java.io.Serializable;

/**
 * This class describes a vulnerability, i.e., a connection between a specific module and a bug.
 */
public class Vulnerability implements Serializable {

    private static final long serialVersionUID = 7L;

    /**
     * A unique identifier
     */
    private int id;

    /**
     * The associated bug
     */
    private Bug bug;

    /**
     * The affected module
     */
    private Module module;

    /**
     * The affected state
     */
    private AffectedState affected;

    public Vulnerability() {

    }

    public Vulnerability(int id,
                         Bug bug,
                         Module module,
                         AffectedState affected) {
        this.id = id;
        this.bug = bug;
        this.module = module;
        this.affected = affected;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public Bug getBug() {
        return bug;
    }

    public void setBug(Bug bug) {
        this.bug = bug;
    }

    public Module getModule() {
        return module;
    }

    public void setModule(Module module) {
        this.module = module;
    }

    public AffectedState getAffected() {
        return affected;
    }

    public void setAffected(AffectedState affected) {
        this.affected = affected;
    }

    @Override
    public String toString() {
        return Vulnerability.class.getName() + "[\n"
                + "  bug: " + bug.getId() + ",\n"
                + "  module: " + module.getId() + ",\n"
                + "  affected: " + affected + "\n"
                + "]";
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if (!(other instanceof Vulnerability)) {
            return false;
        }
        Vulnerability vulnerability = (Vulnerability) other;
        return this.bug.getId() == vulnerability.bug.getId() &&
                this.module.getId() == vulnerability.module.getId();
    }

}
